#!/usr/bin/env ruby

require 'optparse'
require './lib/TreeParser'
require './lib/HTTPHandler'

options = {}
ARGV << '-h' if ARGV.empty?
OptionParser.new do |opts|
  opts.banner = "Usage: developer_challenge [options]"

  opts.on("-t","--test MODE","Which test to make. Required.") do |mode|
    options[:mode] = mode
  end

  opts.on("-f","--file FILE","Triangle file for minimum_path_sum") do |file|
    options[:file] = file
  end

  opts.on("-n  NUMBER","Number of slowapi requests to make") do |number|
    options[:number] = number.to_i
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

end.parse!

options[:number] ||= 1

case options[:mode]
  when 'slowapi' then
    options[:number].times {puts HTTPHandler.get_url('http://slowapi.com/delay/0.3')}
  when 'minimum_path_sum' then
    raise "Missing argument -f FILE for 'minimum_path_sum'" if !options[:file]
    puts TreeParser.parse_least_sum(options[:file])
  else
    raise "Missing a valid --test paramater."
end
